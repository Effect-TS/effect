{
  "name": "@effect/typeclass",
  "version": "0.33.15",
  "type": "module",
  "license": "MIT",
  "description": "A collection of reusable typeclasses for the Effect ecosystem",
  "homepage": "https://effect.website",
  "repository": {
    "type": "git",
    "url": "https://github.com/Effect-TS/effect.git",
    "directory": "packages/typeclass"
  },
  "bugs": {
    "url": "https://github.com/Effect-TS/effect/issues"
  },
  "tags": [
    "typescript",
    "algebraic-data-types",
    "functional-programming",
    "typeclass"
  ],
  "keywords": [
    "typescript",
    "algebraic-data-types",
    "functional-programming",
    "typeclass"
  ],
  "publishConfig": {
    "access": "public",
    "provenance": true,
    "directory": "dist",
    "linkDirectory": false
  },
  "exports": {
    "./package.json": "./package.json",
    ".": "./src/index.ts",
    "./Alternative": "./src/Alternative.ts",
    "./Applicative": "./src/Applicative.ts",
    "./Bicovariant": "./src/Bicovariant.ts",
    "./Bounded": "./src/Bounded.ts",
    "./Chainable": "./src/Chainable.ts",
    "./Contravariant": "./src/Contravariant.ts",
    "./Coproduct": "./src/Coproduct.ts",
    "./Covariant": "./src/Covariant.ts",
    "./Filterable": "./src/Filterable.ts",
    "./FlatMap": "./src/FlatMap.ts",
    "./Foldable": "./src/Foldable.ts",
    "./Invariant": "./src/Invariant.ts",
    "./Monad": "./src/Monad.ts",
    "./Monoid": "./src/Monoid.ts",
    "./Of": "./src/Of.ts",
    "./Pointed": "./src/Pointed.ts",
    "./Product": "./src/Product.ts",
    "./SemiAlternative": "./src/SemiAlternative.ts",
    "./SemiApplicative": "./src/SemiApplicative.ts",
    "./SemiCoproduct": "./src/SemiCoproduct.ts",
    "./SemiProduct": "./src/SemiProduct.ts",
    "./Semigroup": "./src/Semigroup.ts",
    "./Traversable": "./src/Traversable.ts",
    "./TraversableFilterable": "./src/TraversableFilterable.ts",
    "./data/Array": "./src/data/Array.ts",
    "./data/BigInt": "./src/data/BigInt.ts",
    "./data/Boolean": "./src/data/Boolean.ts",
    "./data/Duration": "./src/data/Duration.ts",
    "./data/Effect": "./src/data/Effect.ts",
    "./data/Either": "./src/data/Either.ts",
    "./data/Identity": "./src/data/Identity.ts",
    "./data/Micro": "./src/data/Micro.ts",
    "./data/Number": "./src/data/Number.ts",
    "./data/Option": "./src/data/Option.ts",
    "./data/Ordering": "./src/data/Ordering.ts",
    "./data/Predicate": "./src/data/Predicate.ts",
    "./data/Record": "./src/data/Record.ts",
    "./data/String": "./src/data/String.ts",
    "./data/Tuple": "./src/data/Tuple.ts"
  },
  "scripts": {
    "codegen": "build-utils prepare-v2",
    "build": "pnpm build-esm && pnpm build-annotate && pnpm build-cjs && build-utils pack-v2",
    "build-esm": "tsc -b tsconfig.build.json",
    "build-cjs": "babel build/esm --plugins @babel/transform-export-namespace-from --plugins @babel/transform-modules-commonjs --out-dir build/cjs --source-maps",
    "build-annotate": "babel build/esm --plugins annotate-pure-calls --out-dir build/esm --source-maps",
    "test-types": "tstyche",
    "check": "tsc -b tsconfig.json",
    "test": "vitest",
    "coverage": "vitest --coverage"
  },
  "peerDependencies": {
    "effect": "workspace:^"
  },
  "devDependencies": {
    "effect": "workspace:^"
  }
}
