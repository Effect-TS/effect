[
  "function _forge_bash_completions() {",
  "    local i cur prev opts cmd",
  "    COMPREPLY=()",
  "    cur="${COMP_WORDS[COMP_CWORD]}"",
  "    prev="${COMP_WORDS[COMP_CWORD-1]}"",
  "    cmd=""",
  "    opts=""",
  "    for i in "${COMP_WORDS[@]}"; do",
  "        case "${cmd},${i}" in",
  "            ",$1")",
  "                cmd="forge"",
  "                ;;",
  "            forge,cache)",
  "                cmd="forge__cache"",
  "                ;;",
  "            forge,cache,clean)",
  "                cmd="forge__cache__clean"",
  "                ;;",
  "            forge,cache,ls)",
  "                cmd="forge__cache__ls"",
  "                ;;",
  "            *)",
  "                ;;",
  "        esac",
  "    done",
  "    case "${cmd}" in",
  "        forge)",
  "            opts="-h --completions --log-level --help --wizard --version cache"",
  "            if [[ ${cur} == -* || ${COMP_CWORD} -eq 1 ]] ; then",
  "                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "                return 0",
  "            fi",
  "            case "${prev}" in",
  "            *)",
  "                COMPREPLY=()",
  "                ;;",
  "            esac",
  "            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "            return 0",
  "            ;;",
  "        forge__cache)",
  "            opts="-h --verbose --completions --log-level --help --wizard --version clean ls"",
  "            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then",
  "                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "                return 0",
  "            fi",
  "            case "${prev}" in",
  "                --verbose)",
  "                    COMPREPLY=( "${cur}" )",
  "                    return 0",
  "                    ;;",
  "            *)",
  "                COMPREPLY=()",
  "                ;;",
  "            esac",
  "            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "            return 0",
  "            ;;",
  "        forge__cache__clean)",
  "            opts="-h --completions --log-level --help --wizard --version"",
  "            if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then",
  "                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "                return 0",
  "            fi",
  "            case "${prev}" in",
  "            *)",
  "                COMPREPLY=()",
  "                ;;",
  "            esac",
  "            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "            return 0",
  "            ;;",
  "        forge__cache__ls)",
  "            opts="-h --completions --log-level --help --wizard --version"",
  "            if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then",
  "                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "                return 0",
  "            fi",
  "            case "${prev}" in",
  "            *)",
  "                COMPREPLY=()",
  "                ;;",
  "            esac",
  "            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )",
  "            return 0",
  "            ;;",
  "    esac",
  "}",
  "complete -F _forge_bash_completions -o nosort -o bashdefault -o default forge",
]